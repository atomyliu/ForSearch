//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp.NewsBaseServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsBaseServ.INewsBaseServ")]
    public interface INewsBaseServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsBaseServ/GetList", ReplyAction="http://tempuri.org/INewsBaseServ/GetListResponse")]
        System.Collections.Generic.List<Model.NewsBase> GetList(string keyword, int start, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsBaseServ/GetList", ReplyAction="http://tempuri.org/INewsBaseServ/GetListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Model.NewsBase>> GetListAsync(string keyword, int start, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsBaseServ/GetCount", ReplyAction="http://tempuri.org/INewsBaseServ/GetCountResponse")]
        int GetCount(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsBaseServ/GetCount", ReplyAction="http://tempuri.org/INewsBaseServ/GetCountResponse")]
        System.Threading.Tasks.Task<int> GetCountAsync(string keyword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsBaseServChannel : WebApp.NewsBaseServ.INewsBaseServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsBaseServClient : System.ServiceModel.ClientBase<WebApp.NewsBaseServ.INewsBaseServ>, WebApp.NewsBaseServ.INewsBaseServ {
        
        public NewsBaseServClient() {
        }
        
        public NewsBaseServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsBaseServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsBaseServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsBaseServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Model.NewsBase> GetList(string keyword, int start, int size) {
            return base.Channel.GetList(keyword, start, size);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Model.NewsBase>> GetListAsync(string keyword, int start, int size) {
            return base.Channel.GetListAsync(keyword, start, size);
        }
        
        public int GetCount(string keyword) {
            return base.Channel.GetCount(keyword);
        }
        
        public System.Threading.Tasks.Task<int> GetCountAsync(string keyword) {
            return base.Channel.GetCountAsync(keyword);
        }
    }
}
